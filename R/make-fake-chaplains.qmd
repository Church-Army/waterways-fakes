---
title: "Create fake waterways chaplains"
author: "Dave"
format: html
editor: visual
---

## Intro

We'd like to mock up a working example of a proposed data collection solution. That means mocking up responses and responders.

## Libraries

```{r libraries}
library(conflicted)
library(here)
library(fs)
library(lubridate)

library(dplyr)
conflicted::conflicts_prefer(dplyr::filter)
library(randomNames)
library(stringr)
library(purrr)
library(vroom)
```

## Make fake chaplains

```{r generate_random_names}
set.seed(1992)

respondents <- 500

n_names <- 90

first_names <- randomNames(n_names, ethnicity = 5, which.names = "first")
last_names  <- randomNames(n_names, ethnicity = 5, which.names = "last")

emails <- str_c(str_to_lower(first_names),
                ".", 
                str_to_lower(last_names),
                "@gmail.com")

chaplains <- tibble(first_name = first_names,
                    last_name  = last_names,
                    email_address = emails)

head(chaplains)

chaplains <-
  chaplains[sample(1:nrow(chaplains), replace = TRUE, size = respondents), ]
```

## Make fake responses

### Checkbox response faking

```{r make_fake_responses}

people <- 
  c("liveaboards", "leisure owners",
    "leisure hirers/visitors", "fisher(wo)men",
    "Towpath users", "Ex HM Forces",
    "Navigation Authority staff or volunteers",
    "Homeless", "Waterside business staff", 
    "Waterside residents")

people_probs <-
  rnorm(length(people), 0.35, sd = 0.1)

fake_people <- function(n){
  map_chr(1:n,
      \(x){
        randoms <- runif(length(people))
        people[randoms < people_probs] |> 
        str_c(collapse = ", ")})
  }

fake_people(3)

concerns <- c(
  "financial hardship/benefits", 
  "physical health",
  "mental health",
  "suicidal thoughts",
  "PTSD",
  "Faith and religion",
  "Boat worthiness",
  "Boat licensing and mooring",
  "Addiction (alcohol and/or drugs)",
  "Homelessness",
  "Personal relationships",
  "(Un)employment",
  "Crime",
  "Death and bereavement",
  "Moving onto land"
)

concerns_probs <-
  rnorm(length(concerns), 0.35, sd = 0.1)

fake_concerns <- function(n){
  map_chr(1:n,
      \(x){
        randoms <- runif(length(concerns))
        concerns[randoms < concerns_probs] |> 
        str_c(collapse = ", ")})
  }

fake_concerns(3)

```

### Response date faking

```{r response_date_faking}
trail_zero <- function(x){
  x[nchar(x) == 1] <- str_c("0", x[nchar(x) == 1])
  x
}

random_dates <- function(n){
  day <- sample(1:28, n, replace = TRUE) |> 
    trail_zero()

  hour <- sample(9:22, n, replace = TRUE) |> 
    trail_zero()

  month <- sample(1:12, n, replace = TRUE) |> 
    trail_zero()
  
  dates <- str_c(day, "/", month, "/2023 ", hour, ":00:00")
  sort(dates)
}

random_dates(5)
```

### Fake multiple choice selections

```{r fake_multiple_choices}
fake_multiple_choice <- function(choices, n, probs = NULL){
  sample(choices, replace = TRUE, size = n, prob = probs)
}
```

### Get month label from date

```{r get_month_label_from_date}
month_label <- function(date){
  month <- month(date)
  
  month <- 
    month -
    sample(0:2,
           size = length(month),
           replace = TRUE,
           prob = c(10, 2.5, 1))
  
  month[month <= 0] <- 12 + month[month <= 0]
  
  month.name[month]
}
```

### Compose fake responses

```{r compose_fake_responses}

chaplains <- select(chaplains, email_address)

n_responses <- sample(1:25, replace = TRUE, size = nrow(chaplains))

chaplains <- mutate(chaplains, n_responses = n_responses)

chaplains <- 
  mutate(chaplains,
         timestamp = random_dates(n()),
         people = fake_people(n()),
         concerns = fake_concerns(n()),
         meaningful_conversations =
         fake_multiple_choice(
           choices = c("None", "One", "Two", "Three", "Four", "Five or more"),
           probs = c(0.3, 1, 1.1, 0.7, 0.7, 0.3),
           n = n()),
        general_conversations =
          fake_multiple_choice(
            choices = c("None", "One", "Two", "Three", "Four", "Five or more"),
            probs = c(0.3, 1, 1.1, 0.7, 0.7, 0.3),
            n = n()),
        month = month_label(timestamp))

chaplains_labelled <- 
  select(
    chaplains,
    timestamp,
    email_address,
    month,
    meaningful_conversations,
    general_conversations,
    people,
    concerns
  ) |> 
  arrange(timestamp) |> 
  mutate(across(everything(), \(x) replace(x, is.na(x), "")))

vroom_write(chaplains_labelled, here("fake-chaplains.csv"), delim = ",")
```
